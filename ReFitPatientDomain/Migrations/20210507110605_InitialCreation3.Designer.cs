// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReFitPatientData;

namespace ReFitPatientDomain.Migrations
{
    [DbContext(typeof(PatientContext))]
    [Migration("20210507110605_InitialCreation3")]
    partial class InitialCreation3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReFitPatientDomain.Exercise", b =>
                {
                    b.Property<int>("ExerciseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ExerciseLink")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ExercisePackageID")
                        .HasColumnType("int");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<int>("Repetitions")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("Sets")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("ExerciseID");

                    b.HasIndex("ExercisePackageID");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("ReFitPatientDomain.ExercisePackage", b =>
                {
                    b.Property<int>("ExercisePackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PatientSSN")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ExercisePackageID");

                    b.HasIndex("PatientSSN");

                    b.ToTable("ExercisePackages");
                });

            modelBuilder.Entity("ReFitPatientDomain.Journal", b =>
                {
                    b.Property<int>("JournalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BendAngle")
                        .HasMaxLength(10)
                        .HasColumnType("float");

                    b.Property<string>("GeneralComment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("JournalCollectionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("JournalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JournalType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medicine")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<double>("PainScale")
                        .HasMaxLength(10)
                        .HasColumnType("float");

                    b.HasKey("JournalID");

                    b.HasIndex("JournalCollectionID");

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("ReFitPatientDomain.JournalCollection", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PatientSSN")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.HasIndex("PatientSSN");

                    b.ToTable("JournalCollections");
                });

            modelBuilder.Entity("ReFitPatientDomain.Patient", b =>
                {
                    b.Property<string>("SSN")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SSN");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("ReFitPatientDomain.Exercise", b =>
                {
                    b.HasOne("ReFitPatientDomain.ExercisePackage", null)
                        .WithMany("ExerciseID")
                        .HasForeignKey("ExercisePackageID");
                });

            modelBuilder.Entity("ReFitPatientDomain.ExercisePackage", b =>
                {
                    b.HasOne("ReFitPatientDomain.Patient", null)
                        .WithMany("ExercisePackages")
                        .HasForeignKey("PatientSSN");
                });

            modelBuilder.Entity("ReFitPatientDomain.Journal", b =>
                {
                    b.HasOne("ReFitPatientDomain.JournalCollection", null)
                        .WithMany("JournalID")
                        .HasForeignKey("JournalCollectionID");
                });

            modelBuilder.Entity("ReFitPatientDomain.JournalCollection", b =>
                {
                    b.HasOne("ReFitPatientDomain.Patient", null)
                        .WithMany("JournalCollections")
                        .HasForeignKey("PatientSSN");
                });

            modelBuilder.Entity("ReFitPatientDomain.ExercisePackage", b =>
                {
                    b.Navigation("ExerciseID");
                });

            modelBuilder.Entity("ReFitPatientDomain.JournalCollection", b =>
                {
                    b.Navigation("JournalID");
                });

            modelBuilder.Entity("ReFitPatientDomain.Patient", b =>
                {
                    b.Navigation("ExercisePackages");

                    b.Navigation("JournalCollections");
                });
#pragma warning restore 612, 618
        }
    }
}
